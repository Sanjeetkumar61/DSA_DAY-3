 #include <stdio.h>
#include <conio.h>

#define MAXSIZE 10   

int Queue[MAXSIZE];
int front = -1;
int rear = -1;

 
int isFull() {
    if ((front == 0 && rear == MAXSIZE - 1) || (front == rear + 1)) {
        return 1;
    }
    return 0;
}

 
int isEmpty() {
    if (front == -1) {
        return 1;
    }
    return 0;
}

// Insert
void insertRear() {
    int value;
    printf("Enter the value to insert at rear: ");
    scanf("%d", &value);

    if (isFull()) {
        printf("Queue is full!\n");
        return;
    }

    if (front == -1) {   
        front = 0;
    }
    rear = (rear + 1) % MAXSIZE;  // Circular increment for rear
    Queue[rear] = value;
    printf("Inserted %d at rear\n", value);
}

// Insert  
void insertFront() {
    int value;
    printf("Enter the value to insert at front: ");
    scanf("%d", &value);

    if (isFull()) {
        printf("Deque is full!\n");
        return;
    }

    if (front == -1) {   
        front = rear = 0;
    } else if (front == 0) {
        front = MAXSIZE - 1;   
    } else {
        front--;
    }
    Queue[front] = value;
    printf("Inserted %d at front\n", value);
}

// Delete  
void deleteFront() {
    int element;

    if (isEmpty()) {
        printf("Queue is empty!\n");
        return;
    }

    element = Queue[front];
    printf("Deleted %d from front\n", element);

    if (front == rear) {   
        front = -1;
        rear = -1;
    } else {
        front = (front + 1) % MAXSIZE;   
}

// Delete  
void deleteRear() {
    int element;

    if (isEmpty()) {
        printf("Deque is empty!\n");
        return;
    }

    element = Queue[rear];
    printf("Deleted %d from rear\n", element);

    if (front == rear) {   
        front = rear = -1;
    } else if (rear == 0) {
        rear = MAXSIZE - 1;   
    } else {
        rear--;
    }
}

// Display the circular queue/deque elements
void display() {
    int i;

    if (isEmpty()) {
        printf("Queue is empty!\n");
        return;
    }

    printf("Front -> %d\n", front);
    printf("Items -> ");
    
    for (i = front; i != rear; i = (i + 1) % MAXSIZE) {
        printf("%d ", Queue[i]);
    }
    printf("%d\n", Queue[i]);  
    printf("Rear -> %d\n", rear);
}

 
void main() {
    int choice;

    do {
        printf("\n1. Insert at Rear (Queue)\n2. Insert at Front (Deque)\n3. Delete from Front\n4. Delete from Rear\n5. Display\n6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                insertRear();
                break;
            case 2:
                insertFront();
                break;
            case 3:
                deleteFront();
                break;
            case 4:
                deleteRear();
                break;
            case 5:
                display();
                break;
            case 6:
                printf("Exiting...\n");
                break;
            default:
                printf("Invalid choice!\n");
        }
    } while (choice != 6);
}
